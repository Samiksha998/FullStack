# ---------------------- PostgreSQL Persistent Volume Claim ----------------------
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# ---------------------- PostgreSQL Deployment ----------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "admin123"
            - name: POSTGRES_DB
              value: "employees"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 10
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc

---
# ---------------------- PostgreSQL NodePort Service ----------------------
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  type: NodePort
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 31300  # Exposes PostgreSQL externally

---
# ---------------------- Backend Deployment ----------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: samikshav/backend:latest
          ports:
            - containerPort: 8080
          env:
            - name: DB_HOST
              value: "postgres"
            - name: DB_USER
              value: "postgres"
            - name: DB_PASSWORD
              value: "admin123"
            - name: DB_NAME
              value: "employees"
            - name: DB_PORT
              value: "5432"
            - name: ALLOWED_ORIGINS
              value: "http://localhost:3000"

---
# ---------------------- Backend NodePort Service ----------------------
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  type: NodePort
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 32000  # Exposes backend externally

---
# ---------------------- Frontend Deployment ----------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: samikshav/frontend:latest
          ports:
            - containerPort: 3000
          env:
            - name: REACT_APP_SERVER_URL
              value: "http://<EC2-PUBLIC-IP>:32000"  # Replace with actual EC2 IP

---
# ---------------------- Frontend NodePort Service ----------------------
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: NodePort
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      nodePort: 31000  # Exposes frontend externally
